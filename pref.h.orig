/* Let's tell EMACS what language this is: -*- C -*- */

/* Used by separable libraries to enable PSPP-specific features. */
#define PSPP 1

/*
 *
 * Debugging
 *
 */

/* Define to get lots of info printed by procedures. */
/*#define DEBUGGING 1*/

#if DEBUGGING
#define GLOBAL_DEBUGGING 1
#endif

#if !HAVE_LIBPLOT
#define NO_CHARTS 1
#endif

/* Define these if DEBUGGING is off and you want to make certain
   additional optimizations. */
#if !DEBUGGING
/* #define PRODUCTION 1 */		/* disable extra function calls */
/* #define NDEBUG 1 */			/* disable assert() sanity checks */
#endif

/* Compilers. */

/* Make sure to use the proper keywords. */
#if __GNUC__ > 1 && !defined (inline)
#define inline __inline__
#endif

/* GNU C allows the programmer to declare that certain functions take
   printf-like arguments, never return, etc.  Conditionalize these
   declarations on whether gcc is in use. */
#if __GNUC__ > 1
#define ATTRIBUTE(X) __attribute__ (X)
#else
#define ATTRIBUTE(X)
#endif

#define UNUSED ATTRIBUTE ((unused))
#define NO_RETURN ATTRIBUTE ((noreturn))
#define PRINTF_FORMAT(FMT, FIRST) ATTRIBUTE ((format (printf, FMT, FIRST)))
#define SCANF_FORMAT(FMT, FIRST) ATTRIBUTE ((format (scanf, FMT, FIRST)))

/* CPUs. */

#if SIZEOF_DOUBLE == 8
#define second_lowest_flt64 second_lowest_value
#else
#error Must define second_lowest_flt64 for your architecture.
#endif

/* Figure out which integer type on this system is a signed 32-bit
   integer. */
#if SIZEOF_SHORT==4
  #define int32 short
#elif SIZEOF_INT==4
  #define int32 int
#elif SIZEOF_LONG==4
  #define int32 long
#else
  #error Which one of your basic types is 32-bit signed integer?
#endif

#if SIZEOF_FLOAT==8
  #define flt64 float
  #define FLT64_MAX FLT_MAX
#elif SIZEOF_DOUBLE==8
  #define flt64 double
  #define FLT64_MAX DBL_MAX
#elif SIZEOF_LONG_DOUBLE==8
  #define flt64 long double
  #define FLT64_MAX LDBL_MAX
#else
  #error Which one of your basic types is 64-bit floating point?
  #define flt64 double
  #define FLT64_MAX DBL_MAX
#endif

/* Environments. */

/* Internationalization. */
#include <libintl.h>

#if !ENABLE_NLS
/* If we don't do this then gettext() still monkeys with the string,
   which causes gcc not to do its checking on printf() format
   types. */
#undef gettext
#define gettext(STRING) STRING
#endif

#define _(STRING) gettext(STRING)
#define N_(STRING) STRING

/* Filesystems. */

/* Directory separator character for this OS, if applicable. */
#ifndef __MSDOS__
#define DIR_SEPARATOR '/'
#else
#define DIR_SEPARATOR '\\'
#endif

/* Path delimiter character. */
#ifndef __MSDOS__
#define PATH_DELIMITER ':'
#else
#define PATH_DELIMITER ';'
#endif

/* Options. */

/* Approximate amount of memory, in bytes, to allocate before paging
   to disk.  */
#define MAX_WORKSPACE (4*1024*1024)	/* 4 MBytes */

/* (libhistory) The location for the history file that records
   commands entered interactively.  Tilde expansion is performed. */
#define HISTORY_FILE "~/.pspp_history"

/* (libhistory) Maximum number of commands to record in history
   file. */
#define MAX_HISTORY 500

/* Output drivers. */

/* Define to exclude the HTML output driver. */
/* #define NO_HTML 1 */

/* Define to exclude the PostScript and Encapsulated PostScript
   driver. */
/* #define NO_POSTSCRIPT 1 */

/* Non ansi compilers may set this */
#ifndef P_tmpdir
#define P_tmpdir "/tmp"
#endif
