Mon May  1 16:06:30 2006  Ben Pfaff  <blp@gnu.org>

	Remove vestiges of REPEATING DATA support.
	
	* data-list.c: (struct rpd_num_or_var) Removed.
	(struct repeating_data_trns) Removed.
	(cmd_repeating_data) Removed.
	(find_variable_input_spec) Removed.
	(parse_num_or_var) Removed.
	(parse_repeating_data) Removed.
	(realize_value) Removed.
	(struct rpd_parse_info) Removed.
	(rpd_parse_record) Removed.
	(repeating_data_trns_proc) Removed.
	(repeating_data_trns_free) Removed.
	(repeating_data_set_write_case) Removed.
	(rpd_msg) Removed.

	* inpt-pgm.c: (input_program_source_read) Don't deal with
	REPEATING DATA.

Mon May  1 15:58:28 2006  Ben Pfaff  <blp@gnu.org>

	Remove vestiges of FILE TYPE support. 
	
	* data-list.c: (cmd_data_list) Don't check for FILE TYPE.
	(cmd_repeating_data) Ditto.
	
	* automake.mk (src_language_data_io_libdata_io_a_SOURCES): Remove
	file-type.c, file-type.h.

	* file-type.c: Removed.
	
	* file-type.h: Removed.

Wed Apr 26 13:16:28 2006  Ben Pfaff  <blp@gnu.org>

	Improve the way we handle the various parsing "states".  Until now
	we've hard-coded the state transitions in the command definition
	file, but that's error-prone and, worse, it's redundant--we can
	figure out what state we're in anyhow.  We can cleanly handle
	INPUT PROGRAM and FILE TYPE with a nested command-processing loop.
	
	* data-list.c: (cmd_data_list) Use in_file_type() or
	in_input_program() in place of case_source_is_class() or
	case_source_is_complex().

	* file-type.c: NB: Not really fixed except minimally to compile,
	because it doesn't work anyway.
	(in_file_type) New function.
	(cmd_record_type) No need to check that we're in FILE TYPE.
	(cmd_end_file_type) Ditto.
	(var file_type_source_class) Make static.

	* get.c: (cmd_match_files) Check vfm_source instead of pgm_state.

	* inpt-pgm.c: (in_input_program) New function.
	(cmd_input_program) Rewrite to include nested command processing
	loop.
	(cmd_end_input_program) Just return CMD_END_SUBLOOP.
	(var input_program_source_class) Make static.
	(cmd_end_case) No need to check that we're in INPUT PROGRAM.
	(cmd_end_file) Ditto.
	
	* automake.mk (src_language_data_io_libdata_io_a_SOURCES): Add
	file-type.h, inpt-pgm.h.

	* file-type.h: New file.

	* inpt-pgm.h: New file.

Tue Apr 25 13:11:55 2006  Ben Pfaff  <blp@gnu.org>

	* print.c: Don't special-case MS-DOS line terminators.
	(macro LINE_END_WIDTH) Removed.
	(alloc_line) Line ends are 1 byte.
	(print_trns_proc) Just output \n for line end.

Sun Apr 23 22:05:58 2006  Ben Pfaff  <blp@gnu.org>

	Continue reforming error message support.  In this phase, get rid
	of message "titles" and put the message text in `struct error'.
	Now `struct error' encapsulates a message more properly.
	
	* data-list.c: (macro RPD_ERR) Removed.
	(rpd_msg) New function.  Updated all references to tmsg() to call
	this function instead.

Sat Apr 15 19:38:13 2006  Ben Pfaff  <blp@gnu.org>

	Remove last users of struct file_ext so we can get rid of it
	entirely.
	
	* data-reader.c: (struct dfm_reader) Change file member from
	struct file_ext to FILE *.  Updated all references.
	(dfm_close_reader) Close file with fn_close() instead of
	fn_close_ext().  Also, make a copy of the file name from the file
	handle before closing it, because we can't extract it after we
	close the file.
	(dfm_open_reader) Open file with fn_open() instead of
	fn_open_ext().

	* data-writer.c: (struct dfm_writer) Change file member 
	struct file_ext to FILE *.  Updated all references.
	(dfm_close_writer) Close file with fn_close() instead of
	fn_close_ext().  Also, make a copy of the file name from the file
	handle before closing it, because we can't extract it after we
	close the file.
	(dfm_open_writer) Open file with fn_open() instead of
	fn_open_ext().

Sat Apr 15 18:00:32 2006  Ben Pfaff  <blp@gnu.org>

	* data-list.c: Add prototype to suppress warning for
	cmd_repeating_data().
	
Thu Mar  2 08:40:33 WST 2006 John Darrington <john@darrington.wattle.id.au>
	
	* Moved files from src directory
