@node Invocation

@chapter Starting PSPP
@cindex invocation
@cindex PSPP, invoking

There are two separate user interfaces for PSPP.
There is the command line interface, which responds to commands
typed by the user.
The command line interface is generally available on more platforms
than the graphic user interface and since it doesn't require a
graphics device it can be used from a remote terminal.
Platforms which have a windowing system may also be able to support
the graphic user interface.
The graphic user interface can perform all functionality of the
command line interface.
In addition it gives an instantaneous view of the data, variables and
statistical output.

Whichever interface you choose, a basic understanding of the concepts
used by PSPP is necessary before effective use of the system can be achieved.


@menu
* The command line user interface::  
* The graphic user interface::  
@end menu


@node The command line user interface
@section The command line user interface

@cindex command line, options
@cindex options, command-line

@example
pspp [ -B @var{dir} | --config-dir=@var{dir} ] [ -o @var{device} | --device=@var{device} ]
       [ -a @{compatible|enhanced@} | --algorithm=@{compatible|enhanced@}]
       [ -x @{compatible|enhanced@} | --syntax=@{compatible|enhanced@}]
       [ -I- | --no-include ]
       [ -I @var{dir} | --include=@var{dir} ] [ -i | --interactive ] 
       [ -r | --no-statrc ] [ -h | --help ] [ -l | --list ] 
       [ -s | --safer ]
       [ --testing-mode ] [ -V | --version ]
       [ @var{key}=@var{value} ] @var{file}@enddots{}
@end example

@menu
* Non-option Arguments::        Specifying syntax files and output devices.
* Configuration Options::       Change the configuration for the current run.
* Input and output options::    Controlling input and output files.
* Language control options::    Language variants.
* Informational options::       Helpful information about PSPP.
@end menu

@node Non-option Arguments
@subsection Non-option Arguments

Syntax files and output device substitutions can be specified on
PSPP's command line:

@table @code
@item @var{file}

A file by itself on the command line will be executed as a syntax file.
If multiple files are specified, they are executed in order, as if
their contents had been given in a single file.
PSPP terminates after the syntax files run, unless the @code{-i} or
@code{--interactive} option is given (@pxref{Language control options}).

@item @var{key}=@var{value}

Defines an output device macro @var{key} to expand to @var{value},
overriding any macro having the same @var{key} defined in the device
configuration file.  @xref{Macro definitions}.

@end table

There is one other way to specify a syntax file, if your operating
system supports it.  If you have a syntax file @file{foobar.stat}, put
the notation

@example
#! /usr/local/bin/pspp
@end example

at the top, and mark the file as executable with @code{chmod +x
foobar.stat}.  (If PSPP is not installed in @file{/usr/local/bin},
then insert its actual installation directory into the syntax file
instead.)  Now you should be able to invoke the syntax file just by
typing its name.  You can include any options on the command line as
usual.  PSPP entirely ignores any lines beginning with @samp{#!}.

@node Configuration Options
@subsection Configuration Options

Configuration options are used to change PSPP's configuration for the
current run.  The configuration options are:

@table @code
@item -a @{compatible|enhanced@}
@itemx --algorithm=@{compatible|enhanced@}

If you chose @code{compatible}, then PSPP will use the same  algorithms 
as used by some proprietary statistical analysis packages.
This is not recommended, as  these algorithms are inferior and in some cases 
compeletely broken.
The default setting is @code{enhanced}.
Certain commands have subcommands which allow you to override this setting on 
a per command basis.

@item -B @var{dir}
@itemx --config-dir=@var{dir}

Sets the configuration directory to @var{dir}.  @xref{File locations}.

@item -o @var{device}
@itemx --device=@var{device}

Selects the output device with name @var{device}.  If this option is
given more than once, then all devices mentioned are selected.  This
option disables all devices besides those mentioned on the command line.
@end table

@node Input and output options
@subsection Input and output options

Input and output options affect how PSPP reads input and writes
output.  These are the input and output options:

@table @code
@item -I-
@itemx --no-include

Clears all directories from the include path.  This includes all
directories put in the include path by default.  @xref{Miscellaneous
configuring}.

@item -I @var{dir}
@itemx --include=@var{dir}

Appends directory @var{dir} to the path that is searched for include
files in PSPP syntax files.

@item --testing-mode

Invoke heuristics to assist with testing PSPP.  For use by @code{make
check} and similar scripts.
@end table

@node Language control options
@subsection Language control options

Language control options control how PSPP syntax files are parsed and
interpreted.  The available language control options are:

@table @code
@item -i
@itemx --interactive

When a syntax file is specified on the command line, PSPP normally
terminates after processing it.  Giving this option will cause PSPP to
bring up a command prompt after processing the syntax file.

In addition, this forces syntax files to be interpreted in interactive
mode, rather than the default batch mode.  @xref{Tokenizing lines}, for
information on the differences between batch mode and interactive mode
command interpretation.

@item -r
@itemx --no-statrc

Prevents the execution of the PSPP startup syntax file.

@item -s
@itemx --safer

Disables certain unsafe operations.  This includes the ERASE and
HOST commands, as well as use of pipes as input and output files.
@end table

@node Informational options
@subsection Informational options

Informational options cause information about PSPP to be written to
the terminal.  Here are the available options:

@table @code
@item -h
@item --help

Prints a message describing PSPP command-line syntax and the available
device driver classes, then terminates.

@item -l
@item --list

Lists the available device driver classes, then terminates.

@item -x @{compatible|enhanced@}
@itemx --syntax=@{compatible|enhanced@}

If you chose @code{compatible}, then PSPP will only accept command syntax that 
is compatible with the proprietary program SPSS.
If you choose @code{enhanced} then additional syntax will be available.
The default is @code{enhanced}.


@item -V
@item --version

Prints a brief message listing PSPP's version, warranties you don't
have, copying conditions and copyright, and e-mail address for bug
reports, then terminates.

@end table


@node The graphic user interface
@section The graphic user interface

@cindex Graphic user interface
@cindex PSPPIRE

The graphic user interface can be started by typing @command{psppire} at a 
command prompt.
Alternatively many systems have a system of interactive menus or buttons 
from which @command{psppire} can be started by a series of mouse clicks.

Once the principles of the PSPP system are understood, 
the graphic user interface is designed to be largely intuitive, and
for this reason is covered only very briefly by this manual.
